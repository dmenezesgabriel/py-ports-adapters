services:
  api:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env.template
    depends_on:
      - postgres
      - traefik
    command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; uvicorn src.adapter.driver.api.app:app --host 0.0.0.0'
    labels:
      - "traefik.http.routers.api.rule=Host(`api.localhost`)" # api.localhost:8000

  migrations:
    build: .
    env_file:
      - .env.template
    depends_on:
      - postgres
    command: bash -c "while !</dev/tcp/postgres/5432; do sleep 1; done; alembic -c migrations/alembic/alembic.ini upgrade head"

  postgres:
    image: postgres:16.0-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - py_ports_adapters_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.template

  traefik:
    image: "traefik:v3.0"
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--log.level=DEBUG"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  py_ports_adapters_postgres_data:
